<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kh.wegrid.approval.mapper.ApprovalMapper">

    <select id="getSubmitApprovalCnt">
        SELECT
            COUNT(NO)
        FROM APPROVAL
        WHERE EMP_NO = #{no}
        <if test="statusFilter != null and statusFilter != ''">
            AND STATUS_NO = #{statusFilter}
        </if>
    </select>


    <select id="getSubmitApprovalVoList">
        SELECT
            A.NO
            , A.EMP_NO          AS WRITER_NO
            , E.NAME            AS WRITER_NAME
            , A.L_LINE
            , L.NAME            AS L_LINE_NAME
            , A.STATUS_NO
            , S.NAME            AS STATUS_NAME
            , A.TITLE
            , TO_CHAR( A.ENROLL_DATE, 'YYYY-MM-DD') AS ENROLL_DATE
        FROM APPROVAL A
        JOIN EMPLOYEE E ON ( E.NO = A.EMP_NO )
        JOIN APPROVAL_STATUS S ON ( S.NO = A.STATUS_NO )
        JOIN EMPLOYEE L ON ( L.NO = A.L_LINE )
        WHERE A.EMP_NO = #{no}
        <if test="statusFilter != null and statusFilter != ''">
            AND A.STATUS_NO = #{statusFilter}
        </if>
        ORDER BY A.ENROLL_DATE DESC
        OFFSET #{pvo.offset} ROWS FETCH NEXT #{pvo.boardLimit} ROWS ONLY
    </select>

    <select id="getreceiveApprovalCnt">
        SELECT
        COUNT(NO)
        FROM APPROVAL
        WHERE M_LINE = #{no}
        OR (
            M_STATUS = '2'
            AND L_LINE = #{no}
            )
        OR(
            M_STATUS = '0'
            AND L_LINE = #{no}
            )
        <if test="statusFilter != null and statusFilter != ''">
            AND STATUS_NO = #{statusFilter}
        </if>
    </select>

    <select id="getReceiveApprovalVoList">
        SELECT
        A.NO,
        A.EMP_NO          AS WRITER_NO,
        E.NAME            AS WRITER_NAME,
        A.L_LINE,
        L.NAME            AS L_LINE_NAME,
        A.M_LINE,
        COALESCE(M.NAME, '미지정') AS M_LINE_NAME,
        A.STATUS_NO,
        S.NAME            AS STATUS_NAME,
        A.TITLE,
        TO_CHAR(A.ENROLL_DATE, 'YYYY-MM-DD') AS ENROLL_DATE
        FROM APPROVAL A
        JOIN EMPLOYEE E ON (E.NO = A.EMP_NO)
        JOIN APPROVAL_STATUS S ON (S.NO = A.STATUS_NO)
        JOIN EMPLOYEE L ON (L.NO = A.L_LINE)
        LEFT JOIN EMPLOYEE M ON (M.NO = A.M_LINE)
        WHERE
        (
        A.M_LINE = #{no}
        )
        OR
        (
        A.L_LINE = #{no}
        AND (
        A.M_LINE IS NULL
        OR A.M_STATUS = '2'
        )
        )
        AND (A.M_STATUS != '3' OR A.M_STATUS IS NULL)
        <if test="statusFilter != null and statusFilter != ''">
            AND A.STATUS_NO = #{statusFilter}
        </if>
        ORDER BY A.ENROLL_DATE DESC
        OFFSET #{pvo.offset} ROWS FETCH NEXT #{pvo.boardLimit} ROWS ONLY
    </select>
<!--    OR A.M_LINE IS NULL-->
    <select id="getEmpListCnt">
        SELECT
            COUNT(NO)
        FROM EMPLOYEE
        WHERE DEL_YN = 'N'

        <if test="searchType != null and searchType != ''">
            AND DEPT_NO = #{searchType}
        </if>
        <if test="searchValue != null and searchValue != ''">
            AND NAME LIKE '%${searchValue}%'
        </if>

    </select>

    <select id="getEmpVoList">
        SELECT
        E.NO,
        E.NAME,
        E.EMP_NUM,
        E.DEPT_NO,
        D.NAME AS DEPT_NAME,
        J.NAME AS JOB_NAME,
        E.ENROLL_DATE
        FROM EMPLOYEE E
        JOIN DEPARTMENT D ON ( D.CODE = E.DEPT_NO )
        JOIN JOB_INFO J ON ( J.NO = E.JOB_NO )

        <where>
            E.DEL_YN = 'N'
            <if test="searchType != null and searchType != ''">
                AND E.DEPT_NO = #{searchType}
            </if>
            <if test="searchValue != null and searchValue != ''">
                AND E.NAME LIKE '%${searchValue}%'
            </if>
        </where>
        ORDER BY E.ENROLL_DATE
        OFFSET #{pvo.offset} ROWS FETCH NEXT #{pvo.boardLimit} ROWS ONLY
    </select>

    <insert id="insertApprovalAttachment">
        INSERT ALL
        <foreach collection="list" item="x">
            INTO APPROVAL_ATTACHMENT
            (
            NO
            ,APPR_NO
            ,ORIGIN_NAME
            ,CHANGE_NAME
            )
            VALUES
            (
            (SELECT GET_APPROVAL_ATTACHMENT_NO FROM DUAL)
            , SEQ_APPROVAL.CURRVAL
            , #{x.originName}
            , #{x.changeName}
            )
        </foreach>
        SELECT 1 FROM DUAL
    </insert>

</mapper>